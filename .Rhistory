x <- 4
print x+x
x+x
demo()
plot x
show x
x^3
y<-1,2,3,4,5,6
y <- 1,2,3,4,5,6
y <- x^x
x+y
library("manipulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
pollutantmean <- function(directory = "/Users/nicklukianoff/Desktop/specdata", pollutant, id = 1:332) {
setwd(paste("/Users/nicklukianoff/Desktop/",directory,sep=""))
for (i in 1:length(id)){
charlength<-nchar(id[i])
as.integer(charlength)
if (charlength == 1) id[i]<-paste("00",id[i],sep="")
if (charlength == 2) id[i]<-paste("0",id[i],sep="")
if (exists("climate_data")){
temp_data <-read.csv(paste(id[i],".csv",sep=""), header=TRUE)
climate_data<-rbind(climate_data, temp_data)
rm(temp_data)
}
else{
climate_data <- read.csv(paste(id[i],".csv",sep=""), header=TRUE)
}
}
x <- if (pollutant == "sulfate") climate_data$sulfate else if (pollutant == "nitrate") climate_data$nitrate
mean(x, na.rm= TRUE)
}
source('~/Desktop/specdata/corr.r')
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source('~/Desktop/specdata/corr.r')
submit()
source('~/Desktop/specdata/corr.r')
submit()
submit()
source('~/Desktop/specdata/corr.r')
submit()
source('~/Desktop/specdata/corr.R')
submit()
R.version.string
isntall.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
sessionInfo()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
play()
dir()
nxt()
file.path("mytest3.R")
play()
?file.path
nxt()
file.path(folder1,folder2)
file.path('folder1','folder2')
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2", recursive = TRUE)
setwd("old.dir")
setwd(old.dir)
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by-.5)
seq(0,10,by=.5)
my_seq<-seq(5,10,seq=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<- num_vect<1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char, "Nick")
my_name
paste(my_char,collapse=" ")
paste(my_char,my_name,collapse=" ")
paste(my_name,collapse=" ")
play()
?paste
nxt()
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y""Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="_")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y,z)100)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
play()
my_data[my_na]
my_data[!my_na]
nxt()
my_data  == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
play()
x[2,10]
nxt()
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect <- c(11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix,patients)
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", bp", "rating", "test)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
play()
?colnames
nxt()
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(false==true)==false
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
NOT(5==7)
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]})
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){tail(x,1)},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("It's a boy !")
submit()
mad_libs(noun="computer", adjective="shiny", place="Washington")
submit()
"I" %p% "love" %p% "R"
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
bye()
?gl
library(dataset)
library(datasets)
data(iris)
?iris
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
head(iris)
x<-split(iris,Species="virginica")
length(iris)
iris
iris[$Species="virginica"]
iris$Species="virginica"
?select
x<- iris$Species = "virginica"
?lapply
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(iris&Species, mean)
tapply(iris$Species, mean)
lapply(iris$Species, mean)
sapply(iris$Species, 1, mean)
sapply(iris$Species, mean,1)
?sapply
mapply(iris$Species, mean,1)
?apply
apply(iris$Species, 1, mean)
apply(iris$Species, 2, mean)
View(iris)
View(iris)
tapply(iris$Sepal.Length,iris$Species, 2, mean)
tapply(iris$Sepal.Length,iris$Species, mean)
library(swirl)
swirl()
View(flags)
head(flags)
dim(Flags)
dime(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$red)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
View(flags)
table(flags$animate)
tappls(flags$animate,flags$landmass,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(10)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace=TRUE,prob=c(.3,.7))
flips
sum(flips)
?rbinom
rbinom(1,100,prob=.7)
flips2 <- sample(c(0,1),100,replace=TRUE,prob=c(.3,.7))
flips2 <- rbinom(1,100,prob=.7)
flips2 <- rbinom(100,1,prob=.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_rpois
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(),t1,units='days')
"2013-10-14"+1000
?difftime
Sys.Date()
Sys.Date() + 100
?as.Date
as.Date("2013-10-14") + 1000
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed,
| y = cars$dist)
plot(x = cars$speed,y = cars$dist)
plot(y = cars$speed,x = cars$dist)
plot(cars$speed,y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
load(mtcars)
load("mtcars")
motors <- load("mtcars")
?
data(mtcars)
?boxplot
boxplot(mpg ~ cyl,mtcars)
hist(mtcars$mpg)
install.packages("ggplot2")
librry("ggplot2")
library("ggplot2")
ggplot(data=mtcars,aes(x=hp,y=mpg))+geom_point()
ggplot(data=mtcars,aes(x=hp,y=mpg,color=factor(am)))+geom_point()
diamonds
?melt
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
summary(ggthemes)
dim(ggthemes)
str(ggthemes)
summary(ggplot2)
?ggthemes
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
x <- rep(0:1, each = 5)
> e <- rnorm(10, 0, 20)
> y <- 0.5 + 2 * x + e
> plot(y)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
install.package("rmysql")
install.packages("rmysql")
install.packages("RMySQL")
readJPEG(https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg, native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
library(jpeg)
install.packages('jpeg',,'http://www.rforge.net/')
install.packages("jpeg")
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
library(jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
pwd
ls
ff <- sessioninfo()
ff <- sessionInfo()
ff
exit
remove(ff)
